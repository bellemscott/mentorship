// Place all the styles related to the Welcome controller here.
// They will automatically be included in application.css.
// You can use Sass (SCSS) here: https://sass-lang.com/
$fontfamily: "Open Sans";
.parallax {
    /* The image used */
    background-image: url("home.png");
    /* Set a specific height */
    min-height: 800px;
    padding-top: 0px;
    /* Create the parallax scrolling effect */
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}


/*
=====
DEMO DEPENDENCIES
=====
*/

$fontfamily: "verdana, arial, helvatica, sans-serif";

/* The component will reset browser's styles of link */

.r-link {
    --uirLinkDisplay: var(--rLinkDisplay, inline-flex);
    --uirLinkTextColor: var(--rLinkTextColor);
    --uirLinkTextDecoration: var(--rLinkTextDecoration, none);
    display: var(--uirLinkDisplay) !important;
    color: grey !important;
    text-decoration: var(--uirLinkTextDecoration) !important;
    font-size: 50;
}


/*
  =====
  CORE STYLES
  =====
  */

.ai-element {
    --uiaiElementDisplay: var(--aiElementDisplay, inline-flex);
    --uiaiElementPadding: var(--aiElementPadding, var(--aiElementPaddingTop, 0) var(--aiElementPaddingRight, 0) var(--aiElementPaddingBottom, 0) var(--aiElementPaddingLeft, 0));
    --uiaiElementColor: var(--aiElementColor);
    display: var(--uiaiElementDisplay);
    position: relative;
    overflow: hidden;
}

.ai-element__label {
    color: grey;
}

.ai-element_type2 {
    --uiaiElementLineWeight: var(--aiElementLineWeight, 2px);
    --uiaiElementLineColor: var(--aiElementLineColor, grey);
    --aiElementPaddingBottom: var(--uiaiElementLineWeight);
    position: relative;
}

.ai-element_type2::after {
    content: '';
    position: absolute;
    width: 100%;
    transform: scaleX(0);
    height: 2px;
    bottom: 0;
    left: 0;
    background-color: #0087ca;
    transform-origin: bottom right;
    transition: transform 0.25s ease-out;
}


/* 
  Styles of elements with background
  */

.ai-element_text::before {
    content: attr(data-ai-element-text);
    color: grey;
    position: absolute;
}

.ai-element_text::before,
.ai-element_text .ai-element__label {
    transition-property: transform;
    transition-timing-function: cubic-bezier(.86, .6, .08, 1.01);
    transition-duration: .4s;
    font-family: $fontfamily
}

.ai-element_text:hover::before,
.ai-element_text:hover .ai-element__label {
    transition-duration: .3s;
}


/*
  =====
  EFFECTS
  =====
  */


/* effect 3 */

.ai-element3::after {
    content: '';
    position: absolute;
    width: 100%;
    transform: scaleX(0);
    height: 2px;
    bottom: 0;
    left: 0;
    background-color: #003478;
    transform-origin: bottom right;
    transition: transform 0.25s ease-out;
}

.ai-element3:hover::after {
    transform: scaleX(1);
    transform-origin: bottom left;
}


/*
  =====
  DEMO STYLES
  =====
  */

.ai-element__label {
    --uiaiElementColorHover: var(--aiElementColorHover);
    font-weight: 400;
    font-size: 80px;
}

.ai-element:hover .ai-element__label {
    color: grey;
    font-size: 60px;
}

.ai-element {
    --aiElementLineWeight: 3px;
    --aiElementLineColor: #003478;
    --aiElementColor: #003478;
    --aiElementColorHover: #003478;
}

$color-button-red: #e74c3c;
$color-button-green: #2ecc71;
$color-text: #ecf0f1;
$font-family: Arial,
helvetica,
sans-serif;
$font-size: 100%;
// button --qa
.btn-red-qa,
.btn-green-qa,
.btn-blue-qa {
    min-width: 100px;
    position: relative;
    display: inline-block;
    text-align: center;
    text-transform: uppercase;
<<<<<<< HEAD
    padding: 10px 15px;
    margin: 30px 25px;
=======
    padding: 8px 10px;
    margin: 20px 15px;
>>>>>>> 7cd1a5539c9aa284bc1481610729f0dda5c3d98f
    font-size: $font-size;
    font-weight: 600;
    transition: 0.5s;
    background-color: transparent
}

.btn-red-qa {
    border: 1.5px solid $color-button-red;
    color: $color-button-red;
}

.btn-green-qa {
    border: 1.5px solid $color-button-green;
    color: $color-button-green;
}

.btn-red-qa:hover {
    cursor: pointer;
    &::before {
        border: 0px;
    }
}

.btn-green-qa:hover {
    cursor: pointer;
    &::before {
        border: 0px;
    }
}

.btn-red-qa:hover {
    background-color: darken($color-button-red, 5%);
    border: 2px solid lighten($color-button-red, 5%);
    color: $color-text;
    cursor: pointer;
}

.btn-green-qa:hover {
    background-color: darken($color-button-green, 5%);
    border: 2px solid lighten($color-button-green, 5%);
    color: $color-text;
    cursor: pointer;
}

.form {
    display: inline-block;
}

.flip-card {
    background-color: transparent;
    width: 500px;
    height: 500px;
    perspective: 1000px;
}

.flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: left;
    transition: transform 0.6s;
    transform-style: preserve-3d;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
}

.flip-card:hover .flip-card-inner {
    transform: rotateY(180deg);
}

.flip-card-front,
.flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

.flip-card-front {
    background-color: transparent;
    color: #003478;
}

.flip-card-back {
    position: center;
    background-color: #003478;
    color: white;
    transform: rotateY(180deg);
}